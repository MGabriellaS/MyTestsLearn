@component-name = "portal-lima"
definition {

	property testray.main.component.name = "Blogs";

	setUp {
		TestCase.setUpPortalInstance();

		task ("Makes login and go to home page") {
			TestCase.setUpPortalInstance();

			User.firstLoginPG();

			Navigator.openURL();
		}

		task ("Create a page with a blog's widgetS") {
			JSONLayout.addPublicLayout(
				groupName = "Guest",
				layoutName = "Blogs Page");

			JSONLayout.addWidgetToPublicLayout(
				column = "1",
				groupName = "Guest",
				layoutName = "Blogs Page",
				widgetName = "Blogs");
		}

		task ("Add blogs entry") {
			Navigator.gotoPage(pageName = "Blogs Page");

			JSONBlog.addEntry(
				entryContent = "Blogs Entry Content1",
				entryTitle = "Blogs Entry Title1");

			JSONBlog.addEntry(
				entryContent = "Blogs Entry Content2",
				entryTitle = "Blogs Entry Title2");
		}

		task ("Back to home") {
			Navigator.openURL();
		}
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			BlogsEntry.tearDownCP();

			JSONLayout.deletePublicLayout(
				groupName = "Guest",
				layoutName = "Blogs Page");
		}
	}

    @description = "Can Create a Blog"
	@priority = "5"
    test CanCreateBlog {
        task ("Add the first blogs entry") {
            Navigator.gotoPage(pageName = "Blogs Page");
            Blogs.addEntry(
                entryContent = "My Blog Content",
                entryTitle = "My New Blog");
        }
        task ("Assert success message") {
            Alert.viewSuccessMessage();
        }
        task ("View the related assets in Blogs") {
            Navigator.gotoPage(pageName = "Blogs Page");
            BlogsEntry.viewEntryPG(
                entryContent = "My Blog Content",
                entryTitle = "My New Blog");
        }
    }

    @description = "Can Edit a Blog"
    @priority = "5"
    test CanEditBlog {
        Navigator.gotoPage(pageName = "Blogs Page");
        task ("Edit the Entries that have been added"){
            BlogsNavigator.gotoEditPG(entryTitle = "Blogs Entry Title1");
            BlogsEntry.editEntryContent(
             entryTitle = "Blogs Entry Title1",
             entryTitleEdit = "Blogs Entry Title1 Edit",
             entryContent = "Blogs Entry Content1",
             entryContentEdit = "Blogs Entry Content1 Edit");
            PortletEntry.publish();
        }
        task ("check if Entries were edited"){
             Navigator.gotoPage(pageName = "Blogs Page");
             BlogsEntry.viewEntryPG(
               entryContent = "Blogs Entry Content1 Edit",
               entryTitle = "Blogs Entry Title1 Edit");
        }
    }

	@description = "Can Delete a Blog"
	@priority = "5"
	test CanDeleteBlog {
		task ("Delete some especifc added entry") {
			Navigator.gotoPage(pageName = "Blogs Page");

			BlogsNavigator.openBlogsAdmin(siteURLKey = "guest");

			BlogsNavigator.moveToRecycleBinCP(
				assetType = "Blogs Entry",
				entryTitle = "Blogs Entry Title1");
		}

		task ("Check if the other entries are still existing and have not been deleted") {
			Blogs.viewEntryTitle(
				entryTitle = "Blogs Entry Title2",
				position = "1");
		}

		task ("Check if the deleted Entry was really moved to recycle bin") {
			BlogsEntry.viewNoCP(entryTitle = "Blogs Entry Title1");
		}
	}
    
    @description = "Can search a Blog"
    @priority = "5"
    test CanSearchBlog {
        task ("This bloc Search for exact string in Title"){
            Navigator.gotoPage(pageName = "Blogs Page");
            SearchPortlets.searchEmbedded(searchTerm = ""Blogs Entry Title1"");
            SearchResultPortlet.viewSearchResults(
               searchAssetTitle = "Blogs Entry Title1",
               searchAssetType = "Blogs Entry",
               searchTerm = ""Blogs Entry Title1"");
        }
        task ("Assert the other entry that have not been searched doesn't appear"){
            BlogsEntry.viewNoCP(entryTitle = ""Blogs Entry Title2"");
        }
        task ("This bloc search for a entry that doesn't exists and show the menssage that no results were found"){
            Navigator.gotoPage(pageName = "Blogs Page");
            SearchPortlets.searchEmbedded(searchTerm = ""Blogs Entry Title3"");
            SearchResultPortlet.viewNoSearchResults(searchTerm = ""Blogs Entry Title3"");
        }
    }
}


}